<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gaopeng&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gaohdu.github.io/"/>
  <updated>2017-02-16T15:01:28.989Z</updated>
  <id>https://gaohdu.github.io/</id>
  
  <author>
    <name>GaoPeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cuda学习入门（一）</title>
    <link href="https://gaohdu.github.io/2017/02/16/cuda%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://gaohdu.github.io/2017/02/16/cuda学习入门（一）/</id>
    <published>2017-02-15T16:19:20.000Z</published>
    <updated>2017-02-16T15:01:28.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为博主原创文章，请勿转载。</p>
</blockquote>
<p>在二个月前稍微了解了一下cuda的有关知识，就深深的被吸引了，好高大上可以加速计算，因为当时在做的一个有关视频的程序发现运行一次需要超长时间，就想着能否利用显卡加速，虽然最终没有采用。后面一直想好好学习一下，可是都没有好好的找时间学习一下。今天看了一些入门知识来分享下几点收获。</p>
<h2 id="装一块英伟达显卡就能加速程序？"><a href="#装一块英伟达显卡就能加速程序？" class="headerlink" title="装一块英伟达显卡就能加速程序？"></a>装一块英伟达显卡就能加速程序？</h2><p>虽然说显卡是GPU编程必备的条件，但是一开始的这个想法有点天真！以为代码已完成只要再加一块高性能显卡，程序就能起飞了，比原来快几倍甚至几十被的速度运行，不得不说图样图森破。其实平时所写代码是串行代码，并不是利用了CUDA或Opencl等以并行方式开发的化，所以串行代码是需要改写后才能利用gpu加速的，不改写就完全得不到任何的性能提升。</p>
<h2 id="算法很重要"><a href="#算法很重要" class="headerlink" title="算法很重要"></a>算法很重要</h2><p>首先显卡能加速运算通俗的讲就是在进行大量繁复的计算时，GPU能把重复的工作分配到多个计算核上同时进行这些重复的计算，从而节省时间。所以对于又复杂有大量重复的运行，且并行化程度高的算法会有明显的加速效果。<br>说个个人亲身感受，一个好的算法很重要，同样的如何去实现也同样重要。曾作了一个项目在实现算法的时候就随意的用代码去实现效果就好完全没考虑一下性能上的问题，在图像或视频处理时所用的时间就会令人无法忍受。<br>在实现或改写算法的时候，要注意的是把所有代码都用cuda语法来实现或用cuda替代，这可不能得到加速，反之甚至还会比普通串行代码更慢。合理的做法，是将代码中计算量最繁重的那一部分代码转换成并行代码，适合并行的部分，使用并行代码。</p>
<h2 id="学习使用辅助工具"><a href="#学习使用辅助工具" class="headerlink" title="学习使用辅助工具"></a>学习使用辅助工具</h2><p>并行计算的时候会同时启动成千上百个线程，这时程序要是出现了bug，找起来就有些麻烦了，其中涉及到的资源问题，数据同步问题等等问题，想想就让人头大，因为这可不是平时写代码时，设置几个断点或打印一些信息就能解决的。所以在学习GPU编程的同时学习使用NSight之类的辅助工具，是非常有好处的。</p>
<h2 id="几个重要的名词"><a href="#几个重要的名词" class="headerlink" title="几个重要的名词"></a>几个重要的名词</h2><ol>
<li>主机（Host）：指的是计算机cpu和系统内存。</li>
<li>设备（Device）：指的是GPU和GPU内存。</li>
<li>thread：线程</li>
<li>block：线程块</li>
<li>grid：线程格</li>
<li>一个grid中包括多个block，而一个block中又包括多个thread。</li>
<li>流处理器-sp（streaming processor）: 最基本的处理单元，最后具体的指令和任务都是在sp上处理的。GPU进行并行计算，也就是很多个sp同时做处理。</li>
<li>流多处理器-sm（streaming multiprocessor）:多个sp加上其他的一些资源组成一个sm. 其他资源也就是存储资源，共享内存，寄储器等。</li>
<li>warp:GPU执行程序时的调度单位，目前cuda的warp的大小为32，同在一个warp的线程，以不同数据资源执行相同的指令。</li>
</ol>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>在入门时先了解一些相关的知识，还是有益处的。磨刀不误砍柴工。有所了解后那就是搭建开发环境，我是在windows系统下开发，只需要去官网下载驱动然后完全安装后就ok了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为博主原创文章，请勿转载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在二个月前稍微了解了一下cuda的有关知识，就深深的被吸引了，好高大上可以加速计算，因为当时在做的一个有关视频的程序发现运行一次需要超长时间，就想着能否利用显卡加速，虽然最终
    
    </summary>
    
    
      <category term="cuda" scheme="https://gaohdu.github.io/tags/cuda/"/>
    
      <category term="学习笔记" scheme="https://gaohdu.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo 主题更改以及评论功能开启</title>
    <link href="https://gaohdu.github.io/2016/11/17/hexo-individuation/"/>
    <id>https://gaohdu.github.io/2016/11/17/hexo-individuation/</id>
    <published>2016-11-17T14:36:42.000Z</published>
    <updated>2017-02-15T16:25:40.462Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为博主原创文章，请勿转载。</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前我的个人博客使用的主题是<em>hexo-theme-casual</em>，从<a href="http://github.com/littlewin-wang" target="_blank" rel="external">littlewin的github</a>可以获取该主题。在此感谢<strong>littlewin</strong>。<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo的官网</a>也有很多主题可以下载。有很多这样的大神在，让更换主题的没想像中的难，因为只要去下载主题，然后跟着说明去做就OK了。</p>
<h2 id="下载主题和安装依赖项"><a href="#下载主题和安装依赖项" class="headerlink" title="下载主题和安装依赖项"></a>下载主题和安装依赖项</h2><p>第一步选一个自己喜欢的主题并下载，下载好的主题应放在你的博客根目录下的themes文件夹下。想要用这个主题，还需要安装一些其它的依赖项，按如下命令安装。</p>
<blockquote>
<p>npm install –save hexo-renderer-jade hexo-renderer-scss hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</p>
</blockquote>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ul>
<li>上面的依赖项都安装好之后，将根目录下的_config.yml文件打开，并将theme修改成casual。<br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/individual-2.jpg" alt="theme"></li>
<li><p>接着在根目录下用命令创建两个页面一个是“about”页面，一个是“tags”页面。</p>
<blockquote>
<p>hexo new page about<br>hexo new page tags</p>
</blockquote>
</li>
<li><p>这时我们可以看到根目录下的<code>source</code>文件夹下，多了两个文件夹，就是刚刚用命令生成的，一个是“about”，一个是“tags”，里面有.md文件打开并修改，按如下修改，在about的下面空白部分填上信息就能在页面中显示相应的信息。<br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/2-3.jpg" alt=""><br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/2-4.jpg" alt=""></p>
</li>
<li>页面图标和头像的更改，把图像放到主题目录的<code>source</code>文件夹下，如下把<em> avatar </em>和<em> favicon </em>修改成对应的名字就OK了，<em> aboutme </em>这里添加的文字内容是显示在你头像下的文字。<br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/2-5.jpg" alt=""></li>
<li>配置文件里还有其它的个人信息都改成自己相应的信息就可以了。现在我就可以来生成预览我们的新主题了。</li>
</ul>
<h2 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h2><p>博客的目地就是用来交流学习的，评论功能是非常重要的，而且像博主这种小白就感觉评论功能感觉起来非常牛。一开始要怎么弄完全一头雾水，后来才发现其实大神们都已经做好了，只要拿来用就好了。下面来分享一下开启多说评论功能。<br>只要弄清需要做什么做哪几步就很简单。首先<strong> 多说 </strong>是什么？可以理解成是一个已经实现可以使用的函数，我们只要去调用就能使用它实现的评论功能了。那么怎么要怎么去<em> 调用 </em>？其实casual主题已经配置好代码，只要我们注册一个多说开发者帐号设置好后，进到主题的配置文件把自己的多说帐号填好，再去本地预览页面你就会发现你的文章下面有评论功能了。<br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/2-7.jpg" alt=""></p>
<p>要是你的主题没有配置好多说代码，那么按下面去做就可以了。</p>
<ol>
<li><p>注册<a href="duoshuo.com">多说</a>开发者帐号。</p>
</li>
<li><p>进入到多说开发者页面，完成相应帐号设置，把通用代码复制到自己的页面，一般是复制到主题的模版页面就ok了。<br><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/individual/2-8.jpg" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主题的更换只要按着套路走就ok了，就是按着主题里的说明去做一些相应的修改就ok了。现在想想当时自己做的时候晕头转向的，真是被自己蠢哭，哈哈！</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为博主原创文章，请勿转载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前我的个人博客使用的主题是&lt;em&gt;he
    
    </summary>
    
    
      <category term="hexo" scheme="https://gaohdu.github.io/tags/hexo/"/>
    
      <category term="教程" scheme="https://gaohdu.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 搭建个人博客</title>
    <link href="https://gaohdu.github.io/2016/11/04/hexo-github/"/>
    <id>https://gaohdu.github.io/2016/11/04/hexo-github/</id>
    <published>2016-11-03T16:15:38.000Z</published>
    <updated>2017-02-15T16:25:31.100Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文为博主原创文章，请勿转载。</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前些天，看到身边的一个朋友利用hexo在github上搭建了一个很酷的个人博客，就忍不住也想要一个。马上就百度了一堆教程来看，发现hexo真的好强大，不需要懂前端，只需要一点计算机基础，就能用hexo搭建一个漂亮的个人博客。但是，不要开心的太早，真正自己去动手实现的时候会碰到各种问题，需要耐心的去解决。下面就分享一下我的搭建过程和遇到的问题。</p>
<p><strong>注意：</strong>我使用的是window系统,Hexo为3.2.2。</p>
<h2 id="博客页面生成"><a href="#博客页面生成" class="headerlink" title="博客页面生成"></a>博客页面生成</h2><p><strong>安装Node：</strong>到<a href="https://nodejs.org/en/" target="_blank" rel="external">“Node官网”</a>直接下载并默认安装就OK。</p>
<p><strong>安装Git：</strong>直接去github官网下载并安装。</p>
<p><strong>安装Hexo：</strong>打开刚刚安装好的Git Bash来进操作。操作如下：</p>
<blockquote>
<p>npm install -g hexo</p>
</blockquote>
<p>然后新建一个文件夹用做blog的根目录来存放等下hexo生成的文件，进入到blog根目录后，执行hexo初始化命令:</p>
<blockquote>
<p>hexo init</p>
</blockquote>
<p>接下来就是要利用hexo来生成静态页面了，继续输入命令：</p>
<blockquote>
<p>hexo generate</p>
</blockquote>
<p>到此为止，我们的blog页面已经生成好了。我们通过如下命令启动本地服务，并通过浏览器输入<em><a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a></em>，就可以查看生成好的页面了。</p>
<blockquote>
<p>hexo server</p>
</blockquote>
<p>我们已经完成blog页面的生成并在本地浏览了，想想是不是有点小激动呢？不要着急，还有一半工作等着你去完成。现在还需要把blog部署到Github上，这样就能让大家也能访问到了。</p>
<h2 id="博客页面部署"><a href="#博客页面部署" class="headerlink" title="博客页面部署"></a>博客页面部署</h2><p>没用过Github的，感觉云里雾里的可以先看看教程，<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/" target="_blank" rel="external">Github教程</a>这是以前看过的一个教程,也可以自己找。</p>
<p><strong>注册Github帐号</strong></p>
<p>有Gitbug帐号的无视这一步。没有的帐号的进入<a href="https://github.com" target="_blank" rel="external">Github官网</a>注册一个帐号。</p>
<p><strong>创建仓库repository</strong></p>
<p>登录Github，点击<code>New repositor</code>按钮，创建repository时，<em>注意：</em>Repository name的填写格式要按照<code>yourname.github.io</code>格式来填写，把yourname替换成你想要的即可。其它设置默认就行，点击<code>Create repository</code>按钮，你的仓库就建好了。</p>
<p><strong>部署页面到Github</strong></p>
<p>再对本地配置文件进行一些简单配置后就能把博客放到Github上了，打开blog根目录下的_config.yml（建议使用写字板程序或Notepad++打开）。找到如下地方进行修改，这里是我的配置，这种配置方法还需要配置SSH Key，你需要将title、author、repository改成你自己的，还有url也用你自己的域名就可以了或者使用Github Pages，在仓库的Settings里查看自己的Github Pages。<em>注意：要仔细配置文件中每个冒号后面一定要有一个空格，不然会报错！</em></p>
<p><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/hexo_img/p1-1.jpg" alt="配置文件截图一"></p>
<p><img src="https://raw.githubusercontent.com/gaohdu/Imgs/master/hexo_img/p1-2.jpg" alt="配置文件截图二"></p>
<p>配置好后执行一下命令：</p>
<blockquote>
<p>npm install hexo-deplyoer-git –save<br>hexo g<br>hexo d</p>
</blockquote>
<p>完成上面的多有操作后，我们在Github上的个人博客就搭建好了，在浏览器中访问自己刚刚配置的域名就能访问了，首次配置完去访问有可能页面找不到，一般情况是等待几分钟就可以访问了。</p>
<p><strong>新建博文</strong></p>
<p>在blog的根目录用Git Bash执行</p>
<blockquote>
<p>hexo new “new passage”</p>
</blockquote>
<p>在根目录的<code>source\_post</code>里打开new—passage.md，打开然后编写博文。在hexo中写文章是要用Markdown，不懂的可以先查看一下<a href="">Markdown程</a>，不用担心很麻烦，Markdown语法非常的简单。生成的md文件里面会自动生成一些固定信息比如<code>tile、date、tags</code>等，tile就是文章的标题可以修改这个来修改发表文章的标题。我们只要在这些信息下方的空白区域用Markdown语法来写文章就行了。<br>写完文章后，使用下列命令来上传就可以了。</p>
<blockquote>
<p>hexo g<br>hexo d</p>
</blockquote>
<p>当然也可以先通过如下命令来部署到本地来预览效果：</p>
<blockquote>
<p>hexo g<br>hexo s</p>
</blockquote>
<p>通过上面的教程个人博客已经搭建好并能发表文章了，上面教程是我个人通过学习并动手搭建得出的希望对大家有用。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在搭建过程中，我遇到了各种问题，但是通过耐心的去查找问题并解决，完成了搭建，感觉真好。当然还有好多后续工作可以做，我还会去美化和完善博客。后续的工作有，更换一个自己喜欢的主题，增加文章评论功能等。这些工作在完成后，还会抽空写写和大家一起分享。</p>
<blockquote>
<p>版权声明：本文为博主原创文章，转载请注明出处GaoPeng blog:<a href="https://gaohdu.github.io">https://gaohdu.github.io</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文为博主原创文章，请勿转载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前些天，看到身边的一个朋友利用hexo在
    
    </summary>
    
    
      <category term="hexo" scheme="https://gaohdu.github.io/tags/hexo/"/>
    
      <category term="教程" scheme="https://gaohdu.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
